(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{259:function(v,_,t){"use strict";t.r(_);var e=t(0),i=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"基本类型介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本类型介绍","aria-hidden":"true"}},[v._v("#")]),v._v(" 基本类型介绍")]),v._v(" "),t("p",[v._v("在了解 TypeScript 中的数据类型之前，先回顾一下 ECMAScript 中的数据类型。ECMAScript 有两种不同的数据类型：基本类型与引用类型。")]),v._v(" "),t("p",[v._v("在 ES5 中，一共有 5 中基本数据类型，分别为：")]),v._v(" "),t("ul",[t("li",[v._v("Undefined")]),v._v(" "),t("li",[v._v("Null")]),v._v(" "),t("li",[v._v("Boolean")]),v._v(" "),t("li",[v._v("Number")]),v._v(" "),t("li",[v._v("String")])]),v._v(" "),t("p",[v._v("而引用类型为以下几种：")]),v._v(" "),t("ul",[t("li",[v._v("Object 类型")]),v._v(" "),t("li",[v._v("Array 类型")]),v._v(" "),t("li",[v._v("Function 类型")])]),v._v(" "),t("p",[v._v("在 ES6 中，新增了第 6 个基本类型：Symbol。")]),v._v(" "),t("p",[v._v("TypeScript 为 ECMAScript 的超集，自然而然囊括了上面的所有类型，并且在此基础上还进行了类型扩展，例如 "),t("code",[v._v("void")]),v._v("、"),t("code",[v._v("any")]),v._v("、"),t("code",[v._v("never")]),v._v("、元组、枚举、高级类型等等。")]),v._v(" "),t("p",[v._v("在介绍 TypeScript 的数据类型之前，了解一下“类型注解”这个概念，它相当于强类型语言中的类型声明，对变量起到一个约束的作用。其形式为 "),t("code",[v._v("(变量/函数):type")]),v._v("。")])])}),[],!1,null,null,null);_.default=i.exports}}]);