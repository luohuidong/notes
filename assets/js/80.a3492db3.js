(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{298:function(s,e,a){"use strict";a.r(e);var t=a(0),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"探秘-git-目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#探秘-git-目录","aria-hidden":"true"}},[s._v("#")]),s._v(" 探秘 .git 目录")]),s._v(" "),a("p",[s._v("当我们执行 "),a("code",[s._v("git init")]),s._v(" 初始化一个 Git 仓库的时候，我们会发现目录中多了一个 .git 目录。这个目录包含了几乎所有 Git 存储和操作的对象。如果想备份或复制一个版本库，只需把这个目录拷贝至另一处即可。")]),s._v(" "),a("p",[s._v("下面输出的内容为 "),a("code",[s._v(".git")]),s._v(" 目录的结构：")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("COMMIT_EDITMSG*\nFETCH_HEAD*\nHEAD*\nORIG_HEAD*\nbranches/\nconfig*\ndescription*\ngitk.cache*\nhooks/\nindex*\ninfo/\nlogs/\nobjects/\nrefs/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("本章节将介绍 "),a("code",[s._v("HEAD")]),s._v(" 文件、"),a("code",[s._v("objects")]),s._v(" 目录、"),a("code",[s._v("refs")]),s._v(" 目录、"),a("code",[s._v("index")]),s._v(" 文件，这些都是 Git 的核心组成部分。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("objects")]),s._v(" 目录存储所欲数据内容。")]),s._v(" "),a("li",[a("code",[s._v("refs")]),s._v(" 目录存储只想数据（分支）的提交对象的指针。")]),s._v(" "),a("li",[a("code",[s._v("HEAD")]),s._v(" 文件指示目前被检出的分支。")]),s._v(" "),a("li",[a("code",[s._v("index")]),s._v(" 文件保存暂存区信息。")])]),s._v(" "),a("h2",{attrs:{id:"head-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#head-文件","aria-hidden":"true"}},[s._v("#")]),s._v(" HEAD 文件")]),s._v(" "),a("p",[s._v(".git/HEAD 文件内容如下：")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ref: refs/heads/master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("ref 表示引用，指向 .git 目录下的 refs/heads/master 分支。")]),s._v(" "),a("p",[s._v("假设仓库中有 "),a("code",[s._v("master")]),s._v(" 及 "),a("code",[s._v("test")]),s._v(" 分支，我们将分支从 "),a("code",[s._v("master")]),s._v(" 切换到 "),a("code",[s._v("test")]),s._v(" 分支，HEAD 文件中的内容也会发生变化：")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ref: refs/heads/test\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("切换成 "),a("code",[s._v("test")]),s._v(" 分支之后，HEAD 中的内容，已经从 "),a("code",[s._v("ref: refs/heads/master")]),s._v(" 变成 "),a("code",[s._v("ref: refs/heads/test")]),s._v(" 了。因此我们可以将 HEAD 理解为它告诉我们当前这个仓库工作在哪个分支上面。")]),s._v(" "),a("h2",{attrs:{id:"config-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config-文件","aria-hidden":"true"}},[s._v("#")]),s._v(" config 文件")]),s._v(" "),a("p",[s._v(".git/config 文件存放着 Git 的配置内容。以下为 config 文件中的内容：")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[core]\n        repositoryformatversion = 0\n        filemode = true\n        bare = false\n        logallrefupdates = true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("当我们通过 "),a("code",[s._v("git config --local")]),s._v(" 来设置相关的信息的时候，就会存放到 config 文件当中。如执行 "),a("code",[s._v("git config --local user.name luohuidong")]),s._v(" 来设置 Git 提交时的用户名")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[core]\n        repositoryformatversion = 0\n        filemode = true\n        bare = false\n        logallrefupdates = true\n[user]\n        name = luohuidong\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("可以看到刚刚设置的用户名，已经存放到 config 文件当中了。")]),s._v(" "),a("h2",{attrs:{id:"refs-目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refs-目录","aria-hidden":"true"}},[s._v("#")]),s._v(" refs 目录")]),s._v(" "),a("p",[s._v(".git/refs/ 目录结构：")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("drwxrwxrwx 1 luo luo 4.0K Sep  8 11:44 heads\ndrwxrwxrwx 1 luo luo 4.0K Sep  5 08:18 tags\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("refs 目录中包含 heads 目录和 tags 目录。这意味着 Git 仓库是可以有多个分支以及多个标签的。")]),s._v(" "),a("h3",{attrs:{id:"heads-目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#heads-目录","aria-hidden":"true"}},[s._v("#")]),s._v(" heads 目录")]),s._v(" "),a("p",[s._v(".git/refs/heads/ 目录与我们的分支相关，下面为 .git/refs/heads/ 目录结构：")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("-rwxrwxrwx 1 luo luo 41 Sep  8 11:44 master\n-rwxrwxrwx 1 luo luo 41 Sep  8 11:42 test\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v(".git/refs/heads/ 目录中的文件对应我们的分支，我们创建了多少个分支，这里就会有多少个文件对应这我们的分支，其文件名称对应着我们创建的分支名称。分支我们可以理解为一个独立的工作空间，我们在一个分支提交的更改并不影响另一个分支的提交历史。")]),s._v(" "),a("p",[s._v("下面为 .git/refs/heads/master 文件的内容:")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("574783f243fd9463ab0fac8e64964209d0b2b3e4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这一串东西其实表示一种 Git object 对象，通过下面的命令可以知道它代表的是什么对象类型：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -t 574783f243fd9463ab0fac8e64964209d0b2b3e4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("输出内容为：")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("commit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("从上面的结果可以知道，574783f243fd9463ab0fac8e64964209d0b2b3e4 代表了一个 commit 的标识。通过 "),a("code",[s._v("git log")]),s._v(" 查看一下 master 分支的最新提交历史：")]),s._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("commit 574783f243fd9463ab0fac8e64964209d0b2b3e4 (HEAD -> master)\nAuthor: luohuidong <luohuidong01@126.com>\nDate:   Sun Sep 8 11:44:51 2019 +0800\n\n    添加文字\n\ncommit ea817b0806d1adac3003a036a9a404abb7ad55ac\nAuthor: luohuidong <luohuidong01@126.com>\nDate:   Thu Sep 5 09:11:06 2019 +0800\n\n    Add refering projects\n\n...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("在 master 分支上面执行 "),a("code",[s._v("git log")]),s._v(" 命令，我们可以查看到 master 分支最新的一次 commit 的标识就是 574783f243fd9463ab0fac8e64964209d0b2b3e4，而这串东西而刚好对应了我们在 .git/refs/heads/master 中的内容。")]),s._v(" "),a("h3",{attrs:{id:"tags-目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tags-目录","aria-hidden":"true"}},[s._v("#")]),s._v(" tags 目录")]),s._v(" "),a("p",[s._v("给项目打 tag，可以理解为项目的开发程度已经达到某个里程碑。如项目已经达到 1.0 的版本，这时候我们就可以针对 1.0 这个版本的 commit 打上一个标签。")]),s._v(" "),a("p",[s._v(".gits/refs/tags/ 目录下的文件与 heads 目录是类似的，其中的文件内容也是指向一个 commit 标识。")]),s._v(" "),a("h2",{attrs:{id:"objects-目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#objects-目录","aria-hidden":"true"}},[s._v("#")]),s._v(" objects 目录")]),s._v(" "),a("p",[s._v(".objects 目录存放着对 Git 文件系统至关重要的核心内容。")]),s._v(" "),a("p",[s._v("Git 中的核心对象：")]),s._v(" "),a("ul",[a("li",[s._v("commit")]),s._v(" "),a("li",[s._v("tree")]),s._v(" "),a("li",[s._v("blob")])]),s._v(" "),a("h2",{attrs:{id:"commit、tree-和-blob-三者关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commit、tree-和-blob-三者关系","aria-hidden":"true"}},[s._v("#")]),s._v(" commit、tree 和 blob 三者关系")]),s._v(" "),a("p",[s._v("我们每一次提交都会创建一个 commit 对象出来。 而一个 commit 可能会对应这一个 tree 对象或者是多个 blob 对象，而一个 tree 对象则会对应多个 tree 对象以及 blob 对象。")]),s._v(" "),a("p",[s._v("tree 对象可以理解为我们提交的文件夹结构，而 blob 对象可以理解为我们提交的文件。")])])}),[],!1,null,null,null);e.default=n.exports}}]);