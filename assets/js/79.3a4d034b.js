(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{297:function(s,a,t){"use strict";t.r(a);var n=t(0),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"新建-git-仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建-git-仓库","aria-hidden":"true"}},[s._v("#")]),s._v(" 新建 Git 仓库")]),s._v(" "),t("p",[s._v("新建 Git 仓库有两种场景：")]),s._v(" "),t("p",[s._v("第一种：是把已有的项目代码纳入 Git 管理。这种情况是在建仓库之前，就已经有代码了。对于这种情况，只需要进入到项目代码所在的文件夹，然后执行一下 "),t("code",[s._v("git init")]),s._v(" 就可以了。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" 项目代码所在的文件夹\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("第二种：新建的项目直接用 Git 管理。这种情况是代码还没开始写，但是一开始就想通过 Git 来管理项目。对于这种情况，只需要进入到某个文件夹，然后执行 "),t("code",[s._v("git init your_project")]),s._v("，然后 git 就会在当前路径下创建和项目名称同名的文件夹。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" 某个文件夹\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init your_project "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#会在当前路径下创建和项目名称同名的文件夹")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" your_project\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"配置-local-用户信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-local-用户信息","aria-hidden":"true"}},[s._v("#")]),s._v(" 配置 local 用户信息")]),s._v(" "),t("p",[s._v("新建的仓库，如果我们不想默认使用 global 中的配置，则可以为这个仓库设置本地设置（local）设置。这个设置只会对这个仓库有效，而不会影响到其它仓库。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local user.name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'allan'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'allan@email.com'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("想要查看设置是否成功，则可以执行下面的名来查看 local 设置是否成功：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local --list\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);