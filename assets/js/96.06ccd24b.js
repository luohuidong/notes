(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{315:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"生命周期函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 生命周期函数")]),t._v(" "),a("h2",{attrs:{id:"常用生命周期函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用生命周期函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用生命周期函数")]),t._v(" "),a("h3",{attrs:{id:"constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor","aria-hidden":"true"}},[t._v("#")]),t._v(" constructor()")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("constructor 是 ES6 Class 的语法，在类被实例化的时候会被调用，一般会被用来初始化 state，或者绑定函数，如：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("但是使用 babel 之后，在使用 class 的时候，一般会直接使用简写来定义 state 以及使用箭头函数来定义函数：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("bar")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("箭头函数由于没有 this，所以，所以如果在箭头函数内部使用 this 的话，它的 this 是由父级作用域来决定的，因此就免去了使用 bind 绑定 this 这一步骤。")]),t._v(" "),a("h3",{attrs:{id:"componentdidmount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#componentdidmount","aria-hidden":"true"}},[t._v("#")]),t._v(" componentDidMount()")]),t._v(" "),a("p",[a("code",[t._v("componentDidMount()")]),t._v(" 会在组件 mounted 之后就会被调用，此时组件的 DOM 结构已经完整生成。如果涉及 DOM 节点的操作的话，就可以在这个函数里面操作了。")]),t._v(" "),a("p",[t._v("另外这个函数是设置 subscription 的好地方，如果设置了 subscription 的话，请记得在 "),a("code",[t._v("componentWillUnmount()")]),t._v(" unsubscribe。")]),t._v(" "),a("h3",{attrs:{id:"componentdidupdate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#componentdidupdate","aria-hidden":"true"}},[t._v("#")]),t._v(" componentDidUpdate()")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" snapshot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("当组件已经更新之后，就会被调用。在这个函数中，同样适合做 DOM 操作。而且它还适合对比组件当前 props 与组件之前的 props，然后进行网络请求，一般在初始化表单的时候会比较常用。")]),t._v(" "),a("p",[t._v("第三个参数 snapshot 需要组件实现了 "),a("code",[t._v("getSnapshotBeforeUpdate()")]),t._v(" 并且返回了值后才会有值，否则这个参数获取的值是 undefined。")]),t._v(" "),a("h3",{attrs:{id:"componentwillunmount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#componentwillunmount","aria-hidden":"true"}},[t._v("#")]),t._v(" componentWillUnmount()")]),t._v(" "),a("p",[t._v("这个函数会在组件 unmounted 或 destroyed 之前被调用。这个函数中进行清除 timer，取消网络网络操作，或者清除 subscription 等。")]),t._v(" "),a("p",[t._v("需要切记，在这个函数中不要再调用 "),a("code",[t._v("setState()")]),t._v(" 了，因为组件 unmounted 和 destroyed 之后，即便调了 "),a("code",[t._v("setState()")]),t._v(" 之后，组件也会被 re-rendered。")]),t._v(" "),a("h2",{attrs:{id:"非常用生命周期函数（未完成）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非常用生命周期函数（未完成）","aria-hidden":"true"}},[t._v("#")]),t._v(" 非常用生命周期函数（未完成）")]),t._v(" "),a("p",[t._v("下面所介绍的生命周期函数在某些情况下使用会很便利，但是在大多数情况下是用不上的。")]),t._v(" "),a("h3",{attrs:{id:"shouldcomponentupdate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate","aria-hidden":"true"}},[t._v("#")]),t._v(" shouldComponentUpdate()")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldComponentUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在默认情况下，组件的 state 与 props 的改变会因引起组件的更新。 "),a("code",[t._v("shouldComponentUpdate()")]),t._v("  可以控制组件是否在 state 或者 props 改变的时候进行更新，所以一般它会用在组件性能优化方面。")]),t._v(" "),a("p",[t._v("但在组件性能优化上，一般首选使用 PureComponent，而不是自己去实现 "),a("code",[t._v("shouldComponentUpdate")]),t._v(" ，PureComponent 会通过浅对比 props 和 state 来减少组件的更新次数，从而实现组件性能优化。")]),t._v(" "),a("p",[a("code",[t._v("shouldComponentUpdate()")]),t._v(" 会在组件 re-rendering 之前调用，函数默认返回 true，如果返回 false 的话，则组件就会跳过更新。需要注意的是， "),a("code",[t._v("shouldComponentUpdate()")]),t._v(" 返回 false 并不能阻止子组件在 state 变化是所触发的更新。")]),t._v(" "),a("p",[t._v("另外并不推荐在 "),a("code",[t._v("shouldComponentUpdate()")]),t._v(" 中对 state 和 nextState、props 和 nextProps 进行深度对比，例如使用 lodash 或者 "),a("code",[t._v("JSON.stringfy()")]),t._v(" 进行对比，因为这样的效率是非常低效的，在性能上面会表现得非常糟糕。")]),t._v(" "),a("p",[t._v("目前，当 "),a("code",[t._v("shouldComponentUpdate()")]),t._v(" 返回 false 得话， "),a("code",[t._v("componentDidUpdate()")]),t._v(" 是不会被调用的。在未来，React 也许会将 "),a("code",[t._v("shouldComponentUpdate()")]),t._v(" 作为提示而不是严格的指令来执行，可能存在返回 false 的情况下，组件仍然 re-rendering。")]),t._v(" "),a("h3",{attrs:{id:"static-getderivedstatefromprops"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-getderivedstatefromprops","aria-hidden":"true"}},[t._v("#")]),t._v(" static getDerivedStateFromProps()")]),t._v(" "),a("p",[t._v("这个函数的名字又长又臭。。。一看就是个不常用的货。主要是一看这个函数名，获取来自于 props 的 state？？？啥意思？？？一脸懵逼。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDerivedStateFromProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("code",[t._v("getDerivedStateFromProps")]),t._v(" 会在 render 函数调用之前被触发。它需要返回一个对象去更新 state，如果不更新 state 的话则需要返回 null。")]),t._v(" "),a("p",[a("code",[t._v("getDerivedStateFromProps")]),t._v(" 的存在只有一个目的，它能够让组件通过 props 的改变而改变其自身的 state。")]),t._v(" "),a("p",[t._v("TODO：参考下面的文章完成文章")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://reactjs.org/docs/react-component.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("React.Component"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#when-to-use-derived-state",target:"_blank",rel:"noopener noreferrer"}},[t._v("When to Use Derived State"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://reactjs.org/docs/react-component.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("React.Component"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#when-to-use-derived-state",target:"_blank",rel:"noopener noreferrer"}},[t._v("When to Use Derived State"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);